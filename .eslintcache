[{"C:\\Users\\wardha\\Desktop\\my-app\\src\\index.js":"1","C:\\Users\\wardha\\Desktop\\my-app\\src\\serviceWorker.js":"2","C:\\Users\\wardha\\Desktop\\my-app\\src\\App.tsx":"3","C:\\Users\\wardha\\Desktop\\my-app\\src\\Store\\index.js":"4","C:\\Users\\wardha\\Desktop\\my-app\\src\\Reducers\\index.js":"5","C:\\Users\\wardha\\Desktop\\my-app\\src\\Reducers\\counterReducer.js":"6","C:\\Users\\wardha\\Desktop\\my-app\\src\\Reducers\\cartReducer.js":"7","C:\\Users\\wardha\\Desktop\\my-app\\src\\Config\\route.js":"8","C:\\Users\\wardha\\Desktop\\my-app\\src\\Components\\NavBar\\index.tsx":"9","C:\\Users\\wardha\\Desktop\\my-app\\src\\Components\\AllProducts\\index.tsx":"10","C:\\Users\\wardha\\Desktop\\my-app\\src\\Components\\Cart\\index.tsx":"11","C:\\Users\\wardha\\Desktop\\my-app\\src\\Components\\Card\\index.tsx":"12","C:\\Users\\wardha\\Desktop\\my-app\\src\\Components\\About Us\\about.tsx":"13","C:\\Users\\wardha\\Desktop\\my-app\\src\\Components\\Home\\Home.tsx":"14","C:\\Users\\wardha\\Desktop\\my-app\\src\\Components\\Home\\Carousel.js":"15"},{"size":677,"mtime":1609709783602,"results":"16","hashOfConfig":"17"},{"size":5141,"mtime":1608622964318,"results":"18","hashOfConfig":"17"},{"size":369,"mtime":1609713645643,"results":"19","hashOfConfig":"17"},{"size":178,"mtime":1609709660310,"results":"20","hashOfConfig":"17"},{"size":217,"mtime":1609709542675,"results":"21","hashOfConfig":"17"},{"size":569,"mtime":1609709485097,"results":"22","hashOfConfig":"17"},{"size":1129,"mtime":1609709450061,"results":"23","hashOfConfig":"17"},{"size":785,"mtime":1609792761132,"results":"24","hashOfConfig":"17"},{"size":1696,"mtime":1609792779421,"results":"25","hashOfConfig":"17"},{"size":819,"mtime":1609738529860,"results":"26","hashOfConfig":"17"},{"size":4458,"mtime":1609738300257,"results":"27","hashOfConfig":"17"},{"size":3119,"mtime":1609739355495,"results":"28","hashOfConfig":"17"},{"size":2166,"mtime":1609739959289,"results":"29","hashOfConfig":"17"},{"size":171,"mtime":1609791617316,"results":"30","hashOfConfig":"17"},{"size":1611,"mtime":1609793141530,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"mew2gp",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\wardha\\Desktop\\my-app\\src\\index.js",[],["71","72"],"C:\\Users\\wardha\\Desktop\\my-app\\src\\serviceWorker.js",[],"C:\\Users\\wardha\\Desktop\\my-app\\src\\App.tsx",[],["73","74"],"C:\\Users\\wardha\\Desktop\\my-app\\src\\Store\\index.js",[],"C:\\Users\\wardha\\Desktop\\my-app\\src\\Reducers\\index.js",[],"C:\\Users\\wardha\\Desktop\\my-app\\src\\Reducers\\counterReducer.js",[],"C:\\Users\\wardha\\Desktop\\my-app\\src\\Reducers\\cartReducer.js",["75","76","77"],"import {  createSlice, current } from \"@reduxjs/toolkit\";\r\nexport const cartSlice = createSlice({\r\n  name: \"cartSlice\",\r\n  initialState: {\r\n    cartArray: [],\r\n  },\r\n  reducers: {\r\n    addtoCart: (state, action) => {\r\n      state.cartArray = [...state.cartArray, action.payload];\r\n    },\r\n    removeFromCart: (state, action) => {\r\n      let filtered = state.cartArray.filter((x) => {\r\n        return x.id !== action.payload;\r\n      });\r\n      state.cartArray = filtered;\r\n    },\r\n\r\n    updateCart: (state, action) => {\r\n      let data = current(state.cartArray).find((x) => {\r\n        let index = current(state.cartArray).indexOf(x);\r\n        if (x.id == action.payload.id) {\r\n          const clone = Object.assign({}, x);\r\n          clone.Quantity = action.payload.Quantity;\r\n          clone.subTotal = action.payload.Quantity * x.price;\r\n          state.cartArray[index] = clone;\r\n        }\r\n      });\r\n    },\r\n    checkout: (state) => {\r\n      state.cartArray.length = 0;\r\n    },\r\n  },\r\n});\r\nexport default cartSlice.reducer;\r\nexport const {\r\n  addtoCart,\r\n  removeFromCart,\r\n  updateCart,\r\n  checkout,\r\n} = cartSlice.actions;","C:\\Users\\wardha\\Desktop\\my-app\\src\\Config\\route.js",["78"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport About from \"../Components/About Us/about\";\r\nimport Products from \"../Components/AllProducts\";\r\nimport Cart from \"../Components/Cart\";\r\nimport Navbar from \"../Components/NavBar\";\r\nimport Home from \"../Components/Home/Home\";\r\nexport default function RouterMain() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/product\">\r\n          <Products />\r\n        </Route>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/about\">\r\n          <About />\r\n        </Route>\r\n        <Route path=\"/cart\">\r\n          <Cart />\r\n        </Route>\r\n        \r\n      </Switch>\r\n    </Router>\r\n  );\r\n}","C:\\Users\\wardha\\Desktop\\my-app\\src\\Components\\NavBar\\index.tsx",["79"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./navbar.css\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nconst Navbar = () => {\r\n  const value = useSelector((state: any) => {\r\n    return state.cartSlice.cartArray.length;\r\n  });\r\n  return (\r\n    <div className=\"W-100\">\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          Shopping  App\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNavAltMarkup\"\r\n          aria-controls=\"#navbarNavAltMarkup\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n          <div className=\"navbar-nav ml-auto\">\r\n          <span className=\"nav-item nav-link  \">\r\n              <Link to=\"/\">Home</Link>\r\n            </span>\r\n            <span className=\"nav-item nav-link  \">\r\n              <Link to=\"/product\">Products</Link>\r\n            </span>\r\n            <span className=\"nav-item nav-link  \">\r\n              <Link to=\"/about\">About Us</Link>\r\n            </span>\r\n            <span className=\"nav-item nav-link \">\r\n              <Link to=\"/cart\">\r\n                Cart\r\n                <span className=\" ml-1 mr-2 badge badge-pill badge-dark\">\r\n                  {value || 0}\r\n                </span>\r\n              </Link>\r\n            </span>\r\n                     </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;","C:\\Users\\wardha\\Desktop\\my-app\\src\\Components\\AllProducts\\index.tsx",["80"],"import React, { useState } from \"react\";\r\nimport \"./Product.css\";\r\nimport Card from \"../Card/index\";\r\nimport productsList from \"../../Utils/products.json\";\r\n\r\nconst Products = () => {\r\n \r\n  return (\r\n    <div className=\"mt-3\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {productsList.map((item, index) => {\r\n            let obj = {\r\n              name: item.name,\r\n              id: item.id,\r\n              image: item.image,\r\n              price: item.price,\r\n              Quantity: 1,\r\n              subTotal: item.price,\r\n            };\r\n            return (\r\n              <div className=\"col-md-4\" key={index}>\r\n                <Card obj={obj} />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;","C:\\Users\\wardha\\Desktop\\my-app\\src\\Components\\Cart\\index.tsx",["81","82","83"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./cart.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  removeFromCart,\r\n  updateCart,\r\n  checkout,\r\n} from \"../../Reducers/cartReducer\";\r\nimport { cartItemType, cardType3, stateType } from \"../Types/types\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nconst Cart = () => {\r\n  const dispatch = useDispatch();\r\n  let [a, setA] = useState(0);\r\n  const [data, setData] = useState<cardType3[ ]>([]);\r\n  let cartValue = useSelector((state: stateType) => {\r\n    return state.cartSlice.cartArray;\r\n  });\r\n\r\n  const handleTotal = () => {\r\n    let p = 0;\r\n    cartValue &&\r\n      cartValue?.map((x: cardType3) => {\r\n        p = p + x.subTotal;\r\n        setA(p);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    setData(cartValue);\r\n    handleTotal();\r\n  }, [cartValue]);\r\n  if (data.length === 0) {\r\n    return (\r\n      <h1\r\n        className=\"mt-5  \"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        Cart Is Empty\r\n      </h1>\r\n    );\r\n  }\r\n\r\n  const handleChange = (e: any, id: string) => {\r\n    let Quantity = e.target.value;\r\n    let obj = {\r\n      Quantity,\r\n      id,\r\n    };\r\n    dispatch(updateCart(obj));\r\n    handleTotal();\r\n  };\r\n  const handleCheckout = () => {\r\n    toast.success(\"✔️ ThankYou For Shopping \", {\r\n      position: \"top-center\",\r\n      autoClose: 5200,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n    dispatch(checkout());\r\n  };\r\n  return (\r\n    <div>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={1000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />{\" \"}\r\n      <div className=\"container\">\r\n        <div className=\"row rowBar \">\r\n          <div className=\"col-sm-6 col\">Products</div>\r\n          <div className=\"col-sm-3 col\">Quantity</div>\r\n          <div className=\"col-sm-3 col\">Subtotal</div>\r\n        </div>\r\n        {data &&\r\n          data?.map((item: cardType3, index: number) => {\r\n            return (\r\n              <div className=\"row  no-gutters mb-2\" key={index}>\r\n                <div className=\"col-sm-6 col\" key={index}>\r\n                  <div className=\"singleCart_Wrapper\">\r\n                    <img className=\"cartProductImage\" src={item.image} alt=\"\" />\r\n                    <div>\r\n                      <p className=\"dynamic_Cart_Data\">{item.title}</p>\r\n                      <p className=\"dynamic_Cart_Data\">{item.price} PKR</p>\r\n\r\n                      <p\r\n                        className=\"removeBtn dynamic_Cart_Data\"\r\n                        onClick={() => {\r\n                          dispatch(removeFromCart(item.id));\r\n                        }}\r\n                      >\r\n                        Remove\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-sm-3 col mt-5 justify-content-center align-item-center\">\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    max=\"50\"\r\n                    defaultValue=\"1\"\r\n                    onChange={(e) => handleChange(e, item.id)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-sm-3 col mt-5 dynamic_Cart_Data d-flex justify-content-center align-item-center\">\r\n                  {item.price * item.Quantity}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\"></div>\r\n          <div className=\"col-md-3\"></div>\r\n          <div className=\"col-md-6 col-sm-12  col subTotal\">\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                marginTop: \"5px\",\r\n              }}\r\n            >\r\n              <span>Total </span>\r\n              <span className=\"subTotalPrice\">{a}</span>\r\n            </div>\r\n            <button className=\"checkoutButton\" onClick={handleCheckout}>\r\n              Check Out\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;","C:\\Users\\wardha\\Desktop\\my-app\\src\\Components\\Card\\index.tsx",["84"],"import React, { useEffect, useState } from \"react\";\r\nimport { addtoCart } from \"../../Reducers/cartReducer\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./card.css\";\r\nimport { cardType3, stateType } from \"../Types/types\";\r\n\r\nconst Card: React.FunctionComponent<any> = ({ obj }) => {\r\n  const [isOffline, setIsOffline] = useState(false);\r\n  function isOnline() {\r\n    console.log(\"Offline Func\");\r\n    if (navigator.onLine) {\r\n      console.log(true);\r\n      setIsOffline(false);\r\n    } else {\r\n      console.log(true);\r\n      setIsOffline(true);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    console.log(isOffline)\r\n    if (navigator.onLine) {\r\n      setIsOffline(false);\r\n      console.log(\"online\");\r\n    } else {\r\n      setIsOffline(true);\r\n      console.log(\"offline\");\r\n    }\r\n    // isOnline();\r\n  }, [isOffline]);\r\n  const dispatch = useDispatch();\r\n  let cartValue = useSelector((state: stateType) => {\r\n    return state.cartSlice.cartArray;\r\n  });\r\n  // let favValue = useSelector((state: stateType) => {\r\n  //   return state.favSlice.favArray;\r\n  // });\r\n\r\n  // const addFav = (obj: cardType3) => {\r\n  //   if (favValue.find((x: cardType3) => x.id === obj.id)) {\r\n  //     return toast.error(\"❌Item Already Added!\", {\r\n  //       position: \"top-center\",\r\n  //       autoClose: 1500,\r\n  //       hideProgressBar: false,\r\n  //       closeOnClick: true,\r\n  //       pauseOnHover: true,\r\n  //       draggable: true,\r\n  //       progress: undefined,\r\n  //     });\r\n  //   } \r\n  // };\r\n  const addCart = (param: cardType3) => {\r\n    if (cartValue.find((x: cardType3) => x.id === param.id)) {\r\n      return toast.error(\"❌Item Already Added!\", {\r\n        position: \"top-center\",\r\n        autoClose: 1500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      dispatch(addtoCart(obj));\r\n      toast.success(\"✔️ Item Added\", {\r\n        position: \"top-center\",\r\n        autoClose: 1500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={1000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />{\" \"}\r\n\r\n      <img\r\n        src={obj.image}\r\n        className=\"card-img-top\"\r\n        alt={obj.title}\r\n        height=\"200px\"\r\n      />\r\n\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{obj.name}</h5>\r\n\r\n        <p className=\"card-text\">Price: {obj.price}</p>\r\n        <button\r\n          className=\"btn btn-warning m-1\"\r\n\r\n          onClick={() => addCart(obj)}\r\n        >\r\n          Add To Cart\r\n        </button>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;",["85","86"],"C:\\Users\\wardha\\Desktop\\my-app\\src\\Components\\About Us\\about.tsx",[],"C:\\Users\\wardha\\Desktop\\my-app\\src\\Components\\Home\\Home.tsx",[],"C:\\Users\\wardha\\Desktop\\my-app\\src\\Components\\Home\\Carousel.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":19,"column":11,"nodeType":"93","messageId":"94","endLine":19,"endColumn":15},{"ruleId":"95","severity":1,"message":"96","line":19,"column":52,"nodeType":"97","messageId":"98","endLine":19,"endColumn":54},{"ruleId":"99","severity":1,"message":"100","line":21,"column":18,"nodeType":"101","messageId":"102","endLine":21,"endColumn":20},{"ruleId":"91","severity":1,"message":"103","line":2,"column":50,"nodeType":"93","messageId":"94","endLine":2,"endColumn":54},{"ruleId":"104","severity":1,"message":"105","line":13,"column":9,"nodeType":"106","endLine":13,"endColumn":46},{"ruleId":"107","severity":1,"message":"108","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"109","line":9,"column":10,"nodeType":"93","messageId":"94","endLine":9,"endColumn":22},{"ruleId":"95","severity":1,"message":"110","line":23,"column":37,"nodeType":"97","messageId":"98","endLine":23,"endColumn":39},{"ruleId":"111","severity":1,"message":"112","line":31,"column":6,"nodeType":"113","endLine":31,"endColumn":17,"suggestions":"114"},{"ruleId":"107","severity":1,"message":"115","line":12,"column":12,"nodeType":"93","messageId":"94","endLine":12,"endColumn":20},{"ruleId":"87","replacedBy":"116"},{"ruleId":"89","replacedBy":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'useState' is defined but never used.","'cartItemType' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleTotal'. Either include it or remove the dependency array.","ArrayExpression",["120"],"'isOnline' is defined but never used.",["118"],["119"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},"Update the dependencies array to be: [cartValue, handleTotal]",{"range":"123","text":"124"},[845,856],"[cartValue, handleTotal]"]